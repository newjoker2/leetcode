/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        if (!head || !head->next) return true;
        ListNode* slow=head;
        ListNode* fast=head;
        stack<int> s;
        s.push(head->val);
        while (fast->next!=NULL&& fast->next->next!=NULL)
        {
            slow=slow->next;
            fast=fast->next->next;
            s.push(slow->val);
        }
          if (!fast->next) s.pop();//奇数个时 去掉中间的数
        while(slow->next!=NULL)
        {   
            slow=slow->next;
            int tmp=slow->val;
            int tmp2=s.top();
            s.pop();
            if(tmp!=tmp2)
                return false;
            
            
        }
        return true;
        
        
        
    }
};