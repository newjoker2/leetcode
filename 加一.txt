class Solution {
public:
    vector<int> plusOne(vector<int>& digits) {
        int  length=digits.size();
            if(length==1)
            {
                if(digits[0]==9)
                {    digits[0]=1;
                     digits.push_back(0);
                    return digits;
                }
                else
                {
                    digits[0]+=1;
                    return digits;
                }
            }
        int i=length-1;
        while(i>0)
        {
            if(digits[i]==9)
            {
                digits[i]=0;
                i--;
            }
            else
            {
                digits[i]+=1;
                return digits;
            }
        }
        if(digits[0]==9)
        {
            digits[0]=1;
           
          digits.push_back(0);
            
            return digits;
        }
        else
        {
            digits[0]+=1;
            return digits;
        }
        
        
    }   
};
/*
正规解法
当前位是9的话 变成0 再加前一位
加到第一位后 特殊判断
class Solution {
public:
    vector<int> plusOne(vector<int> &digits) {
        int n = digits.size();
        for (int i = n - 1; i >= 0; --i) {
            if (digits[i] == 9) digits[i] = 0;
            else {
                digits[i] += 1;
                return digits;
            }
        }
        if (digits.front() == 0) digits.insert(digits.begin(), 1);
        return digits;
    }
};
*/