class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        vector<int>  res;
        unordered_map<int,int>  record;
        for( int i = 0; i < nums.size(); i++)
        {
            record[ nums[i] ]++;
        }
        priority_queue< pair<int ,int> , vector< pair<int ,int> > ,greater<pair<int ,int> > >  pq;//pair<int,int>   次数 和数值
        
        
        for( unordered_map<int, int> :: iterator iter = record.begin(); iter != record.end(); iter++)
        {
            if( pq.size() == k){
                if( iter->second > pq.top().first )
                {
                    pq.pop();
                    pq.push( make_pair(iter->second, iter->first) );
                }
 
            }
            else {
                 pq.push( make_pair(iter->second, iter->first) );
            }
        }
        while( !pq.empty() ){
            res.push_back( pq.top().second );
            pq.pop();
        }
        return res;
        
    }
};