//这么直接写是超时的
class Solution {
public:
    int countPrimes(int n) {
        int count=0;
        if(n==0) return 0;
        for(int i=1;i<n;i++)
        {
        if(isPrimes(i)) count++;
        }
        return count;
    }
    bool isPrimes(int x)
    {
         if (x<=1) return false;
        for(int i=2;i*i<=x;i++)
        {
            if(x%i==0)
                return false;
        }
        return true;
    }
};
// 先将所有小于N的质数判断出来
class Solution {
public:
    int countPrimes(int n) {
      bool *isPrime = new bool[n];
        for (int i = 2; i < n; ++i) {
            isPrime[i] = true;
        }//初始化数组
        for (int i = 2; i*i < n; ++i) {
            if (!isPrime[i]) continue;
            for (int j = i*i; j < n; j += i) {
                isPrime[j] = false; //这些都不是质数  带倍数的都不是质数
            }
        }
        int count = 0;
        for (int i = 2; i < n; ++i) {
            if (isPrime[i]) count++;
        }
        return count;
    }
    bool isPrimes(int x)
    {
         if (x<=1) return false;
        for(int i=2;i*i<=x;i++)
        {
            if(x%i==0)
                return false;
        }
        return true;
    }
};